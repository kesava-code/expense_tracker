// Mocks generated by Mockito 5.4.5 from annotations
// in categories_client/test/categories_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:categories_client/data/category_repository.dart' as _i2;
import 'package:categories_client/models/category.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRepository extends _i1.Mock
    implements _i2.CategoryRepository {
  MockCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Category>> getCategories({
    List<int>? ids,
    String? searchTerm,
    String? sortBy,
    String? sortOrder,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, [], {
              #ids: ids,
              #searchTerm: searchTerm,
              #sortBy: sortBy,
              #sortOrder: sortOrder,
            }),
            returnValue: _i3.Future<List<_i4.Category>>.value(<_i4.Category>[]),
          )
          as _i3.Future<List<_i4.Category>>);

  @override
  _i3.Future<int?> addCategory(_i4.Category? category) =>
      (super.noSuchMethod(
            Invocation.method(#addCategory, [category]),
            returnValue: _i3.Future<int?>.value(),
          )
          as _i3.Future<int?>);

  @override
  _i3.Future<int> updateCategory(_i4.Category? category) =>
      (super.noSuchMethod(
            Invocation.method(#updateCategory, [category]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> deleteCategory(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCategory, [id]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);
}
